#!/bin/bash
#
##DOC:	startup an app in current profile.


function yac_main {
	source ${YAC_LIB_DIR}/system
	[ "true" == "${IGNORE_NODE_MODUEL_CHECKING}" ] || {
		INFO "checking node_modules: $(LIGHT_GREEN ${NODEJS_MODULE_DIR})"
		install_modules
	}

	APP=$1
	APP_DIR="${PROFILE_CURRENT_DIR}/apps/${APP}"
	shift

	[ ! -d "${APP_DIR}" ] && ERR "cannot find $(RED ${APP}) in $(find ${PROFILE_CURRENT_DIR}/apps -maxdepth 1 -mindepth 1 -type d | xargs -I{} sh -c 'basename {}' | tr '\n' ' ')" && exit 1

	mkdir -p ${PROFILE_LOG_APP_DIR}
	TIME=$(date '+%Y_%m%d_%H%M')
	DST_FILE="${PROFILE_CURRENT_DIR}/logs/${APP}.log"
	LOG_FILE="${PROFILE_LOG_APP_DIR}/${APP}.${TIME}.log"

	INFO "\tNODE_PATH = $(PURPLE ${NODEJS_MODULE_DIR}/node_modules)"
	INFO "\t$(YELLOW ${RUNTIME_NODEJS_DIR}/bin/node) $(BLUE ${APP_DIR}/index.js) $(LIGHT_GREEN $@)"

	# Remove unix-sock for the app.
	rm -f /tmp/yap/${APP}.system.sock

	APP_RUNTIME_EXECUTABLE="${RUNTIME_NODEJS_DIR}/bin/node"
	APP_RUNTIME_OPTS="--expose-gc"
	APP_RUNTIME_MODULE_PATH="${NODEJS_MODULE_DIR}/node_modules"
	APP_ENTRY="${APP_DIR}/index.js"
	APP_LOGFILE="${LOG_FILE}"

	APP=${APP} \
		APP_RUNTIME_EXECUTABLE=${APP_RUNTIME_EXECUTABLE} \
		APP_RUNTIME_OPTS=${APP_RUNTIME_OPTS} \
		APP_RUNTIME_MODULE_PATH=${APP_RUNTIME_MODULE_PATH} \
		APP_ENTRY=${APP_ENTRY} \
		APP_LOGFILE=${APP_LOGFILE} \
		RUN_NODE_APP_DAEMON $@

	rm -f ${DST_FILE}
	ln -s ${LOG_FILE} ${DST_FILE}
	INFO "\tLOG: $(BLUE ${DST_FILE})"
}


function install_modules {
	local CURRENT=$(pwd)
	local MODULE_CONF="${PROFILE_CURRENT_DIR}/apps/packages.conf"
	local MODULE_DIR="${PROFILE_CURRENT_DIR}/runtimes/nodejs/${NODEJS_VERSION}"
	source "$(dirname $0)/../externals/bash-utils/system"
	initiate_linux_os_variables
	if download_nodejs_modules \
		${NODEJS_VERSION} \
		${OS_NAME} \
		${OS_ARCH} \
		${MODULE_DIR} \
		${MODULE_CONF} \
		${ARCHIVE_URL} ; then
		INFO "successfully install nodejs module"
	else
		local MODULES=$(cat ${MODULE_CONF} | tr '\t' '@' | tr '\n' ' ')
		local CMD="${RUNTIME_NODEJS_DIR}/bin/node ${RUNTIME_NODEJS_DIR}/bin/npm install ${MODULES}"
		cd ${MODULE_DIR} && INFO "install command: $(YELLOW ${CMD})" && ${CMD}
	fi
	cd ${CURRENT}
}

