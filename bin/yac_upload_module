#!/bin/bash
#
##DOC:	upload all nodejs and python modules as 2 single archives to file-server

function upload_nodejs_module {
	[ "" == "${UUID}" ] && UUID=$(dbus-uuidgen)
	[ "" == "${UUID}" ] && UUID="$(cat /proc/sys/kernel/random/uuid)"
	[ "" == "${ARCHIVE_SITE}" ] && ARCHIVE_SITE=$(basename ${CLOUD_ARCHIVE_URL})
	local ARCHIVE="/tmp/${UUID}.tar.gz"
	if [ -d "${NODEJS_MODULE_DIR}/node_modules" ]; then
		cd ${NODEJS_MODULE_DIR}
		INFO "upload ${NODEJS_MODULE_DIR}/node_modules to cloud ..."
	elif [ -d "$(pwd)/node_modules" ]; then
		INFO "upload $(pwd)/node_modules to cloud ..."
	else
		ERR "missing node_modules in either ${NODEJS_MODULE_DIR} or current directory ($(pwd))"
		return 1
	fi

	local UPLOAD_DIR="/embedded-linux/nodejs-modules/${OS_NAME}/${OS_ARCH}/${NODEJS_VERSION}"
	RUN_CMD_STREAMING tar czf ${ARCHIVE} ./node_modules
	RUN_CMD \
		http \
			--form \
			--check-status \
			--ignore-stdin \
			-a ${UPLOAD_USER}:${UPLOAD_PASS} \
			${UPLOAD_URL_ENTRY}/api/v1/c/upload \
				site=${ARCHIVE_SITE} \
				content@${ARCHIVE} \
				directory=${UPLOAD_DIR} \
				overwrite:=true
	rm -f ${ARCHIVE}

	local ARCHIVE_LIST="/tmp/archives.txt"
	http --check-status --ignore-stdin ${CLOUD_ARCHIVE_URL}${UPLOAD_DIR}/$(basename ${ARCHIVE_LIST}) > ${ARCHIVE_LIST} 2>&1
	[ "0" != "$?" ] && rm -f ${ARCHIVE_LIST}

	local PACKAGE_LIST_CONF="${PROFILE_CURRENT_DIR}/apps/packages.conf"
	[ "" != "${PACKAGE_LISTFILE}" ] && PACKAGE_LIST_CONF=${PACKAGE_LISTFILE}

	local MODULES="$(cat ${PACKAGE_LIST_CONF} | tr '\t' '@' | tr '\n' ' ' | sed 's/\ $//g' | tr ' ' ':')"
	echo -e "${UUID}\t${OS_NAME}/${OS_ARCH}\t${MODULES}" >> ${ARCHIVE_LIST}

	RUN_CMD \
		http \
			--form \
			--check-status \
			--ignore-stdin \
			-a ${UPLOAD_USER}:${UPLOAD_PASS} \
			${UPLOAD_URL_ENTRY}/api/v1/c/upload \
			site=${ARCHIVE_SITE} \
			content@${ARCHIVE_LIST} \
			directory=${UPLOAD_DIR} \
			overwrite:=true
	
	rm -f ${ARCHIVE_LIST}
}


function upload_python_module {
	INFO "nothing for python module to upload"
}

function print_help {
cat << __EOF__
yac upload_module [USER] [PASSWORD]

E.g.
	yac upload_module ya-agent AABBCC

	UPLOAD_URL_ENTRY=https://fc.t2t.io ARCHIVE_SITE=archives.t2t.io yac upload_module ya-agent AABBCC
__EOF__
}


function yac_main {
	[ "" == "${UPLOAD_URL_ENTRY}" ] && export UPLOAD_URL_ENTRY="https://fc.t2t.io"
	export UPLOAD_USER=$1
	export UPLOAD_PASS=$2
	export PACKAGE_LISTFILE=$3

	[ "" == "${UPLOAD_PASS}" ] && print_help && exit 1

	source "$(dirname $0)/../externals/bash-utils/system"
	initiate_linux_os_variables
	
	INFO "OS_NAME = $(LIGHT_GREEN ${OS_NAME})"
	INFO "OS_ARCH = $(LIGHT_GREEN ${OS_ARCH})"

	upload_nodejs_module
	upload_python_module
}

