#!/bin/bash
#
##DOC:	install required modules after profile archive is upgraded.

function install_nodejs_modules {
	CURRENT=$(pwd)
	mkdir -p ${NODEJS_MODULE_DIR}

	MODULES=$(cat ${PROFILE_CURRENT_DIR}/apps/packages.conf | tr '\t' '@' | tr '\n' ' ')
	INFO "installing $(PURPLE ${MODULES}) ..."

	MODULES_X=$(cat ${PROFILE_CURRENT_DIR}/apps/packages.conf | tr '\t' '@' | tr '\n' ' ' | sed 's/\ $//g' | tr ' ' ':')
	ARCHIVE_DIR="/embedded-linux/nodejs-modules/${OS_NAME}/${OS_ARCH}/${NODEJS_VERSION}"
	ARCHIVE_LIST="/tmp/archives.txt"
	INFO "checking module archives cached at cloud ..."
	http --check-status --ignore-stdin ${CLOUD_ARCHIVE_URL}${ARCHIVE_DIR}/$(basename ${ARCHIVE_LIST}) > ${ARCHIVE_LIST} 2>&1

	if [ "0" == "$?" ]; then
		UUID=$(cat ${ARCHIVE_LIST} | grep ${MODULES_X} | awk -F'\t' '{print $1}' | tail -n1)
		if [ "" != "${UUID}" ]; then
			INFO "downloading modules from cloud: $(YELLOW ${UUID}.tar.gz)"
			http --check-status --ignore-stdin --output /tmp/${UUID}.tar.gz ${CLOUD_ARCHIVE_URL}${ARCHIVE_DIR}/${UUID}.tar.gz
			if [ "0" == "$?" ]; then
				RUN_CMD tar xf /tmp/${UUID}.tar.gz -C ${NODEJS_MODULE_DIR}
				[ "0" == "$?" ] && INFO "use downloaded module archive" && return
			fi
		fi
	fi
	rm -f ${ARCHIVE_LIST}
	rm -f /tmp/${UUID}.tar.gz

	INFO "installation with npm, PATH = ${RUNTIME_NODEJS_DIR}/bin"
	cd ${NODEJS_MODULE_DIR}
	PATH="${RUNTIME_NODEJS_DIR}/bin:${PATH}" node ${RUNTIME_NODEJS_DIR}/bin/npm install ${MODULES}
	cd ${CURRENT}
}

function install_python_modules {
	INFO "no python modules to install ..."
}

function yac_main {

	source "$(dirname $0)/../externals/bash-utils/system"
	initiate_linux_os_variables

	INFO "OS_NAME = $(LIGHT_GREEN ${OS_NAME})"
	INFO "OS_ARCH = $(LIGHT_GREEN ${OS_ARCH})"

	install_nodejs_modules
	install_python_modules
}
